- name: Install PSExec and SharePoint Designer
  win_chocolatey:
    name: "{{ item }}"
    ignore_checksums: yes
  with_items:
    - psexec
    - sharepointdesigner2010x64
  ignore_errors: yes

- name: Download SharePoint 2016
  win_get_url:
    url: https://download.microsoft.com/download/0/0/4/004EE264-7043-45BF-99E3-3F74ECAE13E5/officeserver.img
    dest: c:\
    force: no

# This task mounts the Officeserver.img file
- name: Mount the SharePoint Bits IMG
  win_disk_image:
      image_path: c:\officeserver.img
      state: present
  register: disk_image_out

- name: Create c:\SP directory
  win_file:
    path: C:\SP
    state: directory

- name: Copy SP folder (SPAutoInstaller folder structure)
  win_copy:
    src: 'SP/'
    dest: 'C:\SP'
    force: no

- name: Copy AutoSPInstallerInput.xml File
  win_template:
    src: AutoSPInstallerInput.xml.j2
    dest: 'C:\SP\AutoSPInstaller\AutoSPInstallerInput.xml'

- name: Copy SP Bits to SPAutoInstaller folder structure
  win_copy:
    src: "{{ disk_image_out.mount_path}}"
    dest: C:\SP\2016\SharePoint\
    force: yes
    remote_src: yes

- name: Install All Required Windows Features
  win_feature:
    name: "{{ item }}"
    state: present
    restart: yes
    include_sub_features: yes
    include_management_tools: yes
  with_items:
    - NET-HTTP-Activation
    - NET-Non-HTTP-Activ
    - NET-WCF-Pipe-Activation45
    - NET-WCF-HTTP-Activation45
    - Web-Server
    - Windows-Identity-Foundation
    - Xps-Viewer
  register: feature_result

- name: Download SharePoint Prerequisites
  win_get_url:
    url: "{{ item }}"
    dest: "{{SharePointPrerequisitesPath}}\\{{ item.split('/')[-1]}}"
  with_items:
    - "https://download.microsoft.com/download/C/3/A/C3A5200B-D33C-47E9-9D70-2F7C65DAAD94/NDP46-KB3045557-x86-x64-AllOS-ENU.exe" # .NET framework 4.6
    - "https://download.microsoft.com/download/B/E/D/BED73AAC-3C8A-43F5-AF4F-EB4FEA6C8F3A/ENU/x64/sqlncli.msi" # Microsoft SQL Server 2012 SP1 Native Client
    - "http://download.microsoft.com/download/5/7/2/57249A3A-19D6-4901-ACCE-80924ABEB267/ENU/x64/msodbcsql.msi" #Microsoft ODBC Driver 11 for SQL Server
    - "http://download.microsoft.com/download/E/0/0/E0060D8F-2354-4871-9596-DC78538799CC/Synchronization.msi" # Microsoft Sync Framework Runtime v1.0 SP1 (x64)
    - "http://download.microsoft.com//download/0/1/D/01D06854-CA0C-46F1-ADBA-EBF86010DCC6/rtm/MicrosoftIdentityExtensions-64.msi" # MMicrosoft Identity Extensions
    - "http://download.microsoft.com/download/3/C/F/3CF781F5-7D29-4035-9265-C34FF2369FA2/setup_msipc_x64.exe" # Microsoft Information Protection and Control Client
    - "http://download.microsoft.com/download/A/6/7/A678AB47-496B-4907-B3D4-0A2D280A13C0/WindowsServerAppFabricSetup_x64.exe" # Windows Server AppFabric 1.1
    - "http://download.microsoft.com/download/F/1/0/F1093AF6-E797-4CA8-A9F6-FC50024B385C/AppFabric-KB3092423-x64-ENU.exe" # Cumulative Update 7 for Microsoft AppFabric 1.1 for Windows Server
    - "http://download.microsoft.com/download/C/6/9/C690CC33-18F7-405D-B18A-0A8E199E531C/Windows8.1-KB2898850-x64.msu"
    - "http://download.microsoft.com/download/1/6/B/16B06F60-3B20-4FF2-B699-5E9B7962F9AE/VSU_4/vcredist_x64.exe" # Visual C++ Redistributable Package for Visual Studio 2015,
    - "http://download.microsoft.com/download/9/3/F/93FCF1E7-E6A4-478B-96E7-D4B285925B00/vc_redist.x64.exe" # Another visual C++ Redistributable Package for Visual Studio 2013/2012,
    - "http://download.microsoft.com/download/1/C/A/1CAA41C7-88B9-42D6-9E11-3C655656DAB1/WcfDataServices.exe" # Microsoft WCF Data Services 5.6

- name: Install SharePoint Prerequisites via PowerShell
  script: Install-Prerequisites.ps1 -SharePointBitsPath {{SharePointBitsPath}}

- name: Reboot after Installing Prerequisites
  win_reboot:

- name: Trigger AutoSPInstaller (computer will restart and continue install)
  win_psexec:
    command: C:\SP\AutoSPInstaller\AutoSPInstallerLaunch.bat
    priority: high
    elevated: yes
    interactive: yes
    username: "{{ sys_admin_account }}"
    password: "{{ domain_admin_password }}"
    wait: no

- name: Wait for log file to be created
  pause:
    minutes: "1"

- name: Debug Show env
  debug:
    var: ansible_env

- name: Find AutoSPInstall Log File
  win_find:
    paths:
      - "C:\\Users\\{{ ansible_user }}.{{ netbios }}\\Desktop"
    patterns: ['*.log', '*.txt']
    get_checksum: no
  register: logs

- name: Found files
  debug:
    var: logs.files[0].path

- name: Wait for 'Press any key' in log file
  win_wait_for:
    path: "{{logs.files[0].path}}"
    regex: Press any key
    state: present
    timeout: 2400

- name: Reboot server
  win_reboot:

- name: Open Firewall for port 2016
  win_firewall_rule:
    name: Configuration Admin Remote Connection
    localport: 2016
    action: allow
    direction: in
    protocol: tcp
    profiles: domain,private,public
    state: present
    enabled: yes

- name: Wait until port 2016 is available
  win_wait_for:
    port: 2016
    state: present
